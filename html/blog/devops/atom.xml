<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">

  <title><![CDATA[Blog Category:  Devops | Jeremy's Programming Blog]]></title>
  <link href="https://www.jeremymorgan.com/blog/devops/atom.xml" rel="self"/>
  <link href="https://www.jeremymorgan.com/"/>
  <updated>2019-02-27T04:15:33+00:00</updated>
  <id>https://www.jeremymorgan.com/</id>
  <author>
    <name><![CDATA[Jeremy Morgan]]></name>
    
  </author>
  <generator uri="https://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using DISM to Create a Repeatable IIS Installation]]></title>
    <link href="https://www.jeremymorgan.com/blog/iis-devops/how-to-dism-repeatable-iis-install/"/>
    <updated>2018-09-28T23:20:00+00:00</updated>
    <id>https://www.jeremymorgan.com/blog/iis-devops/creating-a-repeatable-iis-install</id>
    <content type="html"><![CDATA[<p>Repeatable installs are all the rage in Devops these days. As developers we have this "automate everything" mentality, and for good reason. In this article I'll show you how you can do that with IIS installation as well. There's no reason to go hunting and pecking around the GUI every time you need to do this. This is the just one of many ways to automate IIS installs, which I'll be covering in the next few weeks.</p>

<p>I also cover this in depth in <a href="https://pluralsight.pxf.io/c/1221983/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Finstalling-configuring-iis" target="_blank">my latest Pluralsight course</a> on Installing IIS.</p>

<h3>Why would I ever need to do this?</h3>

<p><img class="right" src="/images/repeatable-iis-devops/repeatable-iis-devops.jpg" title="&#34;How To Create Repeatable Installs in IIS&#34;" alt="&#34;How To Create Repeatable Installs in IIS&#34;"></p>

<p>Most of the time administrators probably have a task like "throw IIS on the server and make sure the application works" and they do just that. That's how I used to do it too. I was working on a project many years ago that required us to spin up VM servers on a virtual network as a "stack".</p>

<p>This stack was a small snapshot of our production network, so to make sure our software worked with everyone's updates, we had to build a new stack a few times a week.</p>

<p>A few times a week, we'd have to click through the GUI install and remember each box to check. Yeah, you can get good at it but it's a waste of time.</p>

<p>Naturally I had to find a way to automate it, and break out some PowerShell. You do this, because you save time that can be spent doing fun stuff. So let's learn how to create automated, repeatable IIS installations.</p>

<h3>Getting Started</h3>

<p>So you're an administrator for ACME Widgets and you want to create a custom install of IIS and make it automated. You create a new server and are ready to go.</p>

<p>To find out if IIS is installed, we'll run a command called <a href="https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/what-is-dism" target="_blank">DISM</a>. DISM is a tool to build and service Windows images, it's mostly used to create and maintain images for Virtual Machines, it's extremely powerful, but we'll cover that in a future article. For now we'll use it to check features on the machine.</p>

<p>Open up a command prompt, and run the following command:</p>

<p><code>
dism /online /get-featureinfo /featurename:IIS-WebServer
</code></p>

<p>As I run it on my virtual machine, I can see that IIS is not yet installed.</p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-01.jpg" alt="Repeatable Installs in IIS" /></p>

<p>You can also find a list of everything that's enabled with this command:</p>

<p><code>
DISM /online /get-features /format:table | find "Enabled"
</code></p>

<p>And you'll see something like this:</p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-02.jpg" alt="Repeatable Installs in IIS" /></p>

<p>by piping the output into find and searching for enabled we can get a full list of features that are already enabled on the server.</p>

<p>We can also quickly see if a single feature is enabled like we did before, but piping the results into find and checking the state:</p>

<p><code>
dism /online /get-featureinfo /featurename:IIS-WebServer | find "State"
</code></p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-03.jpg" alt="Repeatable Installs in IIS" /></p>

<p>Here we can quickly and clearly see IIS is not installed.</p>

<h3>Creating a Batch File</h3>

<p>So now that we know we can get this type of output, we're going to build a little batch file to do it, and we'll run the command a little different this time. This is pretty light programming, but it will be a set of tests to see if particular items are installed.</p>

<p>Type in notepad webinstall.bat and let's create a batch file. Add the following:</p>

<p><code>
@ECHO OFF
dism /online /get-featureinfo /featurename:IIS-WebServer | find "State : Disabled" &gt; nul
</code></p>

<p>We're typing in dism, online, get-featureinfo, featurename, then piping that to find. We'll look for state saying disabled, and if that phrase is found, that means IIS is disabled, or not installed. That will change our error level, which we'll add next.</p>

<p><code>
if %ERRORLEVEL% == 0 (
echo "IIS Web Server is not installed"
)
</code>
If our error level is set to zero, that means the phrase state enabled was found in our output. Let's test it out.</p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-04.jpg" alt="Repeatable Installs in IIS" /></p>

<p>Now in our batch file we can see that IIS is not installed, and we have a block inside the statement to install IIS.</p>

<p>We could do that with a block of code like this:</p>

<p><code>
if %ERRORLEVEL% == 0 (
echo "IIS Web Server is not installed"
dism /online /enable-feature /featurename:IIS-WebServer /all
)
</code></p>

<p>This is the first basic IIS install script. At the end we can put a check to see if it's installed:</p>

<p><code>
dism /online /get-featureinfo /featurename:IIS-WebServer | find "State"
</code></p>

<p>The finished batch file <a href="https://gist.github.com/JeremyMorgan/5f5ca70db82bd645d891c1aedd4e1d2b" target="_blank">is available here</a>.</p>

<h3>Running the Script</h3>

<p>Now after we run the file, it should do the following set of steps:</p>

<ul>
<li>Check to see if IIS is installed</li>
<li>If it's not installed, install it</li>
<li>Check again to see if it's installed.</li>
</ul>


<p>So the end result is, if IIS is installed it does nothing, if it's not installed then adds it, and looks like this:</p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-05.jpg" alt="Repeatable Installs in IIS" /></p>

<p>This small, simple script can make sure IIS is installed on the machine. And it's repeatable.</p>

<h3>Customizing the Install</h3>

<p>Of course as you're building your script, you may need to install other IIS modules, chances are it won't be just a plain IIS install.</p>

<p>If you run the following command, you can see everything related to IIS that can be installed here:</p>

<p><code>
dism /online /get-features | find "IIS"
</code></p>

<p>This is a good way to get a list of IIS features available:</p>

<p><img src="/images/repeatable-iis-devops/repeatable-iis-devops-06.jpg" alt="Repeatable Installs in IIS" /></p>

<p>So, if you'd like to add more IIS features, it's as easy as making more loops to check for them:</p>

<p>ASP.NET:</p>

<p>```
dism /online /get-featureinfo /featurename:IIS-ASPNET45 | find "State : Disabled" > nul</p>

<p>if %ERRORLEVEL% == 0 (
echo "ASPNET is not installed. We should install it."
dism /online /enable-feature /featurename:IIS-ASPNET45 /all
)
```</p>

<p>HTTP Redirect:</p>

<p>```
dism /online /get-featureinfo /featurename:IIS-HttpRedirect | find "State : Disabled" > nul</p>

<p>if %ERRORLEVEL% == 0 (
echo "HTTP Redirect is not installed . We should install it."
dism /online /enable-feature /featurename:IIS-HttpRedirect /all
)
```</p>

<p>HTTP Logging:</p>

<p>```
dism /online /get-featureinfo /featurename:IIS-HttpLogging | find "State : Disabled" > nul</p>

<p>if %ERRORLEVEL% == 0 (
echo "HTTP Logging is not installed . We should install it."
dism /online /enable-feature /featurename:IIS-HttpLogging /all
)
```</p>

<p>You get the idea. You can build a custom installation that can be run from a batch file, quickly and easily.</p>

<h3>Conclusion</h3>

<p>So now you're set to create a neat little batch file you can run on any machine to install IIS to 100 different VMs if you want to. You can put this on an Azure stack, or run it on a development machine. As I stated I cover this and many other repeatable installations in <a href="https://pluralsight.pxf.io/c/1221983/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Finstalling-configuring-iis" target="_blank">my latest course on Pluralsight</a>. It covers ways to effectively install IIS at a large scale.</p>

<p>You can even run DISM remotely or on VM Images that aren't even booted. It's a great tool to get to know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up easy file sharing with Samba]]></title>
    <link href="https://www.jeremymorgan.com/blog/linux/how-to-file-sharing-samba/"/>
    <updated>2018-03-18T14:43:00+00:00</updated>
    <id>https://www.jeremymorgan.com/blog/linux/set-up-easy-file-sharing-with-samba</id>
    <content type="html"><![CDATA[<p>In this tutorial, I'll show you how easy it is to setup file sharing on your network using SAMBA. You can easily share files between Linux and Windows machines with a pretty minimal amount of setup.</p>

<!-- more -->


<h3>How I'm Using SAMBA File Sharing</h3>

<p>First, to give you little context, here's how I am using Samba file sharing, with something I recently set up for course development.</p>

<p><img src="/images/how-to-file-sharing-samba/how-to-file-sharing-samba-01.jpg" alt="How to setup file sharing with SAMBA" /></p>

<p>So I am developing courses and using a variety of Operating Systems for it. One course in progress is Windows related and I'm using Windows 2012 and 2016 Server machines. For another course I'm working on I'm using a variety of Linux machines. I'm spinning up multiple virtual machines with a fresh OS to demonstrate configuration and modification, then destroying them.</p>

<h3>Workstation</h3>

<p>I have my workstation that I record with (my trusted Mac Mini), and I use Windows or OSX and run things like Camtasia, Final Cut Pro, Audio Tools, Photoshop, PowerPoint etc. I have a dual monitor setup and I use RDP to connect to a server, and use a full screen on one Monitor and have my recording tools on the other.</p>

<h3>Virtualization</h3>

<p>I'm using a server to run headless virtual machines <a href="https://www.jeremymorgan.com/tutorials/devops/virtualization-with-virtual-box/" target="_blank">that I described in this article</a>. The sole purpose of this machine is to run these virtual machines and I want to dedicate as many resources as I can to it, because it runs several at one time.</p>

<p>I ran into an issue where i had a huge folder full of ISO images for each operating System. Combined with the disk space used by the virtual machines themselves, I decided I had to split it off.</p>

<br />


<p><img src="/images/how-to-file-sharing-samba/how-to-file-sharing-samba-02.jpg" alt="How to set up file sharing with SAMBA" /></p>

<h3>File Server</h3>

<p>I found an old machine I wasn't using and decided to drop a hard drive in it, and turn it into a file server. With an i3 and 4 gigs of RAM it's plenty fast. I decided to go with a minimal install of CENTOS an install SAMBA on it.</p>

<h3>Workflow</h3>

<p>So now I can ssh into my server and run commands to spin up the various virtual machines I need to run, and I have space to create many more. I have the installation ISOS residing on the file share server, which is mounted on the VM server. So to create a new virtual machine, I can just mount an ISO, run the installer and go, and create fresh new machines as needed.</p>

<p>If I see some cool distribution of Linux I just have to try, I can download the installer ISO with my workstation to the shared folder, then build a vm to install from the ISO.</p>

<p>It's not redundant or secured tightly, but it's all stuff I can download from MSDN or the internet to replace anyway. This is one of my uses for a Samba server.</p>

<p>Now, let's get to the tutorial.</p>

<h2>How to Set Up File Sharing with Samba</h2>

<p>Here's how you can set up a file server with Samba. For this I am using <a href="https://www.centos.org/" target="_blank">CentOS</a> Linux, but it's very similar for most Linux distributions.</p>

<p>I've created an account named jeremy that will be used for serving files. You never want to run this kind of stuff under the root account.  So I'll log in with the Jeremy account, and use sudo to run any commands that require administrative rights.</p>

<p>In a fresh install of CentOS you will need to <a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-centos-quickstart" target="_blank">add this account to the sudoers file</a>.</p>

<h3>Install Samba</h3>

<p>First we'll need to install Samba.</p>

<p><code>
sudo yum install samba samba-client samba-common
</code></p>

<p>Now we want to create a new folder for our file share. This is where the files will be stored that we're sharing.</p>

<p>Then we'll change the permissions on this share</p>

<p><code>
mkdir -p /srv/samba/secure
sudo chmod -R 0770 /srv/samba/secure
sudo chown -R root:smbgrp /srv/samba/secure
sudo chcon -t samba_share_t /srv/samba/secure
</code></p>

<h3>Add Samba User Group</h3>

<p>Next we'll add the Samba user group. Then you'll want to add a user to that group.
You want to make sure this is an existing user on your machine, for this I used the Jeremy account I created the folder with.</p>

<p><code>
groupadd smbgrp
usermod jeremy -aG smbgrp
</code></p>

<p>Next, you want to add the Samba user, which should be the same as the account you're using (in my case, jeremy).</p>

<p><code>
sudo smbpasswd -a jeremy
</code></p>

<p>it will ask you for your password. This will be the password for the Samba share, and you can put in your existing user password here.</p>

<h3>Edit Smb.conf</h3>

<p>Next we want to edit our smb.conf. Make a quick backup of the file</p>

<p><code>
sudo cp /etc/samba/smb.conf /etc/samba/smb.bak
</code></p>

<p>Now, let's edit the file</p>

<p><code>
sudo vi /etc/samba/smb.conf
</code></p>

<p>First I'm going to change the name of my workgroup to WORKGROUP in all caps. this is the name of my windows workgroup.</p>

<p>Here we have homes which are home folders for each user if you'd like to use those</p>

<p>Let's create a share that points to where we just created a folder.</p>

<p>```
[fileshare]</p>

<pre><code>comment= my file share
path = /srv/samba/secure
valid users = jeremy
public = no
writable = yes
browsable = yes
printable = no
create mask = 0765
</code></pre>

<p>```</p>

<h3>Start Service</h3>

<p>You want to test your configuration changes to make sure everything is correct.</p>

<p><code>
testparm
</code></p>

<p>Then, it's time to restart the smb and nmb services:</p>

<p><code>
sudo systemctl restart smb.service
sudo systemctl restart nmb.service
</code></p>

<h3>Firewall</h3>

<p>We'll have to add an entry to the firewall to allow the samba service to be accessible from outside the network:</p>

<p><code>
firewall-cmd --permanent --zone=public --add-service=samba
firewall-cmd --reload
</code></p>

<h3>Browsing</h3>

<p>Now, we can browse to the server from a Windows machine:<br /></p>

<div style="display: block; margin-left: auto; margin-right: auto;">

<img src="https://www.jeremymorgan.com/images/how-to-file-sharing-samba/how-to-file-sharing-samba-03.jpg" alt="How to file sharing with Samba" />

</div>


<br />


<p>You can even mount it as a mapped drive, or <a href="https://wiki.samba.org/index.php/Mounting_samba_shares_from_a_unix_client" target="_blank">mount it on a linux machine</a>. Samba setup is super easy, and great to use.</p>

<h2>Conclusion</h2>

<p>Setting up Samba is easy, and something to consider if you want easy file sharing between Linux and Windows machines, or even Linux and Linux machines. I gave some context of how to set it up, but there are tons of use cases for Samba. You can also tie it in to different authentication/authorization schemes if you'd like an use it with Active Directory as well. Check out <a href="https://www.samba.org/" target="_blank">Samba.org</a> for more information.</p>

<p>I also created a video tutorial for this:</p>

<br />


<iframe width="560" height="315" src="https://www.youtube.com/embed/JT0Y0VUP7T4" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>


<br />


<p>Subscribe to <a href="https://www.youtube.com/channel/UCAR4QD5vqpn4LFrrBiDe7lQ" target="_blank">my channel on YouTube</a> for more tutorials!</p>

<br />



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows to Go with the Spyrus USB Drive]]></title>
    <link href="https://www.jeremymorgan.com/blog/devops/windows-to-go-usb-drive/"/>
    <updated>2018-03-12T15:04:00+00:00</updated>
    <id>https://www.jeremymorgan.com/blog/devops/windows-to-go-with-the-spyrus-usb-drive</id>
    <content type="html"><![CDATA[<p>What we need is a good bootable live USB stick for Windows. I've said this many times over the years, and hacked together things to make that very thing happen, but nothing that worked really well. So when the folks at Spyrus sent me a Windows to Go USB to check out, I was pretty excited.</p>

<!-- more -->


<br />


<div style="display: block; margin-left: auto; margin-right: auto;">

<img src="https://www.jeremymorgan.com/images/windows-to-go-usb/windows-to-go-01.jpg" alt="Windows to go live drives" />

</div>


<p><em>Spyrus Windows to Go Live Drive - <a href="https://www.spyrus.com/windows-to-go-live-drives/">More details here</a></em></p>

<h3>What is a Live USB?</h3>

<p>Live USB drives and DVDs have been around for years, they're simply an operating system stored on a device and you boot from that device instead of your hard drive. Usually when you turn your PC on, it seeks out different areas to grab an operating system, so if you direct it to a live device, the computer is being controlled from the USB drive.</p>

<p>You don't even need a hard drive to run, and if you have a hard drive in the computer you can mount it as a secondary drive and perform work on it. This is the big advantage to this setup, you can retrieve files or work on files when:</p>

<ul>
<li>The computer has a virus</li>
<li>The computer has malware</li>
<li>The OS has failed</li>
<li>The hard drive won't boot</li>
</ul>


<p>Under these circumstances you can boot to a USB drive and use that to run the machine while you figure out what's wrong. You don't have to use the corrupted/broken/virus-ridden operating system on the computer. It's a great for fixing things.</p>

<p>They've been doing this with Linux for years. It's an extremely simple concept but the execution is pretty difficult, especially with Windows. Traditionally Microsoft did not want you to do this, and there were several obstacles preventing it. The Spyrus drive takes care of making it happen, and their work has proven successful.</p>

<h3>Other Advantages to a Live USB Drive</h3>

<div style="float:right; overflow: auto; margin: 5px;">
<img src="https://www.jeremymorgan.com/images/windows-to-go-usb/windows-to-go-03.jpg" alt="Windows to go live drives" />
</div>


<p>Fixing broken machines aren't the only use of a live drive. You can get a live drive setup with all the applications you need to work with, your files and configurations. Theoretically you could plug this into any machine and get to work.</p>

<p>There's also a good security use, you can work with files and keep them secure on your person rather than leaving them on a machine that may or may not be secured. With the built in hardware encryption the Spyrus drive performs this task well.</p>

<h2>My Experience With the Spyrus Live USB</h2>

<p>I took this drive and plugged it into everything in my house, the fire station, and other places to try it out. There were a few things that surprised me about the Spyrus Drive. I'll cover those, but here are some basic pros and cons that I found.</p>

<h4>Pros:</h4>

<div style="float:right; overflow: auto; margin: 5px;">
<img src="https://www.jeremymorgan.com/images/windows-to-go-usb/windows-to-go-05.jpg" alt="Windows to go live drives" />
</div>


<ul>
<li>This thing is really well built. Just holding on to it you can tell it's solid.</li>
<li>It works great, on a ton of different machines</li>
<li>The performance is spectacular</li>
<li>I could set up a development workstation on it, and carry it around</li>
<li>It's easy to set up</li>
<li>Truly a portable workstation you can carry in your pocket</li>
<li>Hardware security features a great plus</li>
</ul>


<h4>Cons</h4>

<ul>
<li>I found one machine that wouldn't boot it (out of 9)</li>
<li>There is some driver setup that has to be done</li>
<li>On my Mac I had to get drivers to connect wirelessly, could have been "stranded"</li>
</ul>


<p>It should be noted that the cons aren't the fault of this product, but rather Windows related issues. While you could potentially boot up to a machine and not be able to connect to the internet, it's not a problem inherent to the design of the Spyrus, but caused by lack of a particular driver in the Windows system. This will happen with any similar product.</p>

<p>I did have one machine that it wouldn't boot on, and I'm not sure why. Since I have two identical laptops, I tried it on the other and it worked. I'm pretty sure this is hardware or configuration related, and not the fault of the product.</p>

<p>I had to struggle to come up with cons here, because the device simply did what it's supposed to do. It just works.</p>

<p>I loaded up some development tools on it and built a couple applications. I went back and forth through machines and it worked flawlessly. I could see myself using this thing a lot in the future.</p>

<h3>What Surprised Me</h3>

<p>When I first unboxed this thing I immediately plugged it into a laptop. It went through a Windows install and it was good to go. Then I went to every machine in the house I could find. Here's what surprised me:</p>

<p><strong>It ran on my Mac</strong></p>

<p>The PCs were great, and it was expected that they'd boot to them, but then I plugged it into my Mac, and it actually worked really well. If you do this, you have to load up the same Bootcamp drivers you have to load to get Windows on your Mac in the first place. Once you do this, it runs great. I wasn't expecting that.</p>

<p><strong>The transition between machines was quick</strong></p>

<p>With each new machine there was a driver install process, and some tweaks to the display. It was just a few minutes each time, then when I hopped from machine to machine later it seamlessly goes between them. You can't ask for much better than that.</p>

<p><strong>It runs considerably faster than off the drive</strong></p>

<p>This one surprised me the most. I noticed it seemed really "snappy" on an older machine I was running, and I wondered if it truly was performing better.</p>

<p>Theoretically it should be roughly the same speed because it should be running out of memory, either solid memory on the machine or from the stick. But it is faster running from the stick:</p>

<p><img src="https://www.jeremymorgan.com/images/windows-to-go-usb/windows-to-go-04.jpg" alt="Windows to go live drives" /></p>

<p>You can view the detailed GeekBench results here:</p>

<ul>
<li><a href="http://browser.geekbench.com/v4/cpu/7302485" target="_blank">Windows Running on the Machine</a></li>
<li><a href="http://browser.geekbench.com/v4/cpu/7201679" target="_blank">Windows Running from the Spyrus USB Drive</a></li>
</ul>


<p>I was surprised at the performance increase. Something to consider for high CPU activities.</p>

<h2>My Overall Conclusion</h2>

<p>Overall I am very satisfied with this product, and I'm not being paid to say it. If you have a use for a product of this type, I would recommend this one. It's priced right for what you get.</p>

<p><a href="https://www.spyrus.com/windows-to-go-live-drives/" target="_blank">Here's some more info on the drive I used</a></p>

<p>It's well built, so you can carry it around with you everywhere. It works great, and reliably. It's certified by Microsoft. I decided to hammer on this thing for a couple weeks, and I couldn't get it to fail me.</p>

<p>Personally, I'm going to set this up with some virus scanners and maybe some pentesting utilities, so if someone calls me up to fix their computer, I can just head over with the stick and try to fix it. I may even use it as a portable workstation, and set it up like my desktop, so I can head off somewhere and plug it in my laptop and get to work fast.</p>

<p>There are a lot of viable use cases for this, and the product does it well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Latest Virtualization Setup]]></title>
    <link href="https://www.jeremymorgan.com/tutorials/devops/virtualization-with-virtual-box/"/>
    <updated>2018-02-10T13:28:00+00:00</updated>
    <id>https://www.jeremymorgan.com/tutorials/devops/my-virtualization-setup</id>
    <content type="html"><![CDATA[<p>Like many geeks of the time I spent the 90s and 2000s with at least 2 or 3 old computers in a closet, connected by a switch running various operating systems with various services running on them. Giant, loud, clunky machines whirring away.</p>

<!-- more -->


<div style="float: right; padding: 15px;">

<img src= "https://www.jeremymorgan.com/images/my-virtual-box-setup/jeremy-old.jpg" alt="Jeremy Morgan, about 2003 or so" />

</div>


<p>This very website was hosted for years on an old Pentium Machine running FreeBSD connected to my DSL line in my bedroom. It was just the way you did things then.</p>

<p>I had stacks of hard drives with labels on them. Ebay specials I'd purchased for the sole purpose of putting different operating systems on them. Everything from Redhat, Gentoo, FreeBSD or various versions of Windows, I would just swap the drive and go.</p>

<p>For years I lived in a condo that had a coat closet near the front door with an electrical outlet in it. I ran Ethernet through the ceiling and filled it to the top with machines. All for development, file servers, and web hosting purposes. It all seems a little silly now.</p>

<h3>2018 is a little different...</h3>

<p>These days I have an Azure Account, AWS, and <a href="https://www.digitalocean.com/?refcode=ca6f81fa42b4" target="_blank">Digital Ocean</a>. Virtualization has made progress even the most die hard geeks didn't expect. Even development itself is a bit abstracted from the bare metal these days, at least for most people. Things like Docker will make the OS and it's configuration almost irrelevant.</p>

<p>Yet I still have a server in my house, and I want to show you guys the setup.</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/intel-xw8400-server.jpg" alt="HP xv8600 Xeon Server" /></p>

<p>This is an old HP Xeon Workstation I picked up that was going to use for course production, but even with 2 Xeons and 32 gig of RAM it fails to outperform my Mac Mini for video and audio rendering. So I decided to use it for some remote virtualization stuff, and stuffed it in a corner of our daylight basement.</p>

<h3>Why do I need this?</h3>

<p>Lately I've been doing a lot of random software development and building courses online. For those courses I need a fresh operating system and development environment. Obviously I could record some of these things on my desktop, but with the frequent configuration changes and software installs I could mess up the accuracy of my courses. So I want a machine with a dedicated operating system for each course. That motivated me to set this up.</p>

<h2>Getting the server setup</h2>

<p>To start this out, I originally had Windows 10 on this server. It ran well, <a href="http://browser.geekbench.com/v4/cpu/6882166" target="_blank">the performance was not too bad</a>. But if I were to use this as only a Virtualization machine, the overhead wasn't that great.</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/windows-memory.jpg" alt="Window 10 Memory Usage " /></p>

<p>This is with the machine "at an idle". I was using up 2 gigs of memory just loading up a desktop with nothing else. Surely I could do better than that.</p>

<p>It should come as a surprise to nobody I decided to go with Linux base, and I installed Debian 9 on it. Why Debian? It's the same OS that powers jeremymorgan.com and I like it because it's lean, simple and well supported. It doesn't have the bleeding edge packages (I use Arch on the Desktop for that) but it's stable. Incredibly stable. I wanted something I could install and forget about. So Debian was my choice.</p>

<p>I went with a barebones Linux installation, custom kernel and no window manager, and found that the idle was significantly better:</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/linux-memory-usage.jpg" alt="Linux Memory Usage" /></p>

<p>This gives me a little more headroom and CPU cycles to work with.</p>

<p>I ended up installing LXDE because it's easier to configure and manage VMs with a window system. But I needed to set my server to boot to just a console, that way I can start and stop the windowing environment when I wanted to.</p>

<p>To do that, I had to set my runlevel, which is a little different these days than in the past. If you want your server/desktop to boot to a prompt, do this:</p>

<p><code>
systemctl get-default
</code>
In my case, it said</p>

<blockquote><p>graphical.target</p></blockquote>

<p>Which is not what I want. So I then type in:</p>

<p><code>
systemctl set-default multi-user.target
</code></p>

<p>that way I can just fire up the server at a prompt and not have to have the windowing system loaded in memory. Yep, it's that easy.</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/default-runlevel-target.jpg" alt="Default Runlevel Target for Debian" /></p>

<p>So now I had a nice lean and stable OS base to start with.</p>

<p>Then I installed LXDE and then used <a href="http://networkstatic.net/xrdp-an-easy-remote-desktop-setup-for-your-ubuntu-servers/" target="_blank">xrdp to set up a remote desktop</a> so I never have to walk over to the server to do anything. I just remote in from my office.</p>

<h3>Setting up virtual machines</h3>

<p>For the Virtualization, I chose <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank">Virtual Box</a>. I've worked with Hyper-V and VMWare in the past and they each have their merits, but for this application this works best for me. I originally attempted to setup Hyper-V server but my machine was too old and didn't support it fully. So this worked out.</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/virtualbox.jpg" alt="Virtual Box Setup" /></p>

<p>Now one thing about Virtual Box that's awesome is you can virtual machines "headless" from the command line. This is a great feature if you want to spin up a bunch of them. I can run 3 to 4 servers at a time without a blip in performance (ok 32 gigs of RAM and Xeons help with that).</p>

<p>Installing the machines is super easy. You can choose to allocate as much hardware as you'd like, or don't like to the mix:</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/virtual-box-memory.jpg" alt="Virtual Box Memory" /></p>

<p>And CPU usage is handled nicely:</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/virtual-box-cpu.jpg" alt="Virtual Box CPU Setup" /></p>

<p>For networking, I set up one bridged adapter to communicate with the outside world, and another adapter for an internal network to communicate with other servers:</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/bridged.jpg" alt="Bridged Network Adapter VirtualBox" /></p>

<p>It can't be beat. So now I have several VMs set up and ready to go.</p>

<h2>Running the Virtual Machines</h2>

<p>So now I have my server booted at just a prompt, and I can list all my available virtual machines:</p>

<p><code>
VBoxManage list vms
</code></p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/virtualbox-list-vms.jpg" alt="Virtual Box List VMs" /></p>

<p>This is pretty handy. I can start them up here, then RDP into them from my office machine. Virtualbox uses VRDP to provide the headless interface to the outside world. I've used it extensively the last few weeks with zero problems.</p>

<p>I can start up a VM with the following command:</p>

<p><code>
VBoxManage startvm "&lt;VM NAME&gt;" --type headless
</code></p>

<p>I even have some shell scripts to start up clusters or sets of machines at once.</p>

<p>Then, I can just check to see the machine are running:</p>

<p><code>
VBoxManage list runningvms
</code>
 <img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/show-running-vms.jpg" alt="Show running VMs in Virtual Box Command line headless" /></p>

<p>And it's that easy!</p>

<p>Here's one thing that's not so easy... finding an IP address. The only real reliable way to get it is by going into my router and looking for them. Some machines I have statically assigned an IP for ease of use. If you don't do that though, you can always just show the VM from the Windowing interface:</p>

<p> <img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/show-desktop-ip.jpg" alt="Show Desktop Virtual Box" /></p>

<p>And then type in ipconfig, ifconfig, ip a, etc to get the IP.</p>

<p>I can RDP into any of these machines, do development, record courses, whatever I need.</p>

<p><img src="https://www.jeremymorgan.com/images/my-virtual-box-setup/desktop-view.jpg" alt="RDP into Debian Virtual Machine" /></p>

<p>It works out great. Since it's on my local network it feels and performs like I'm on the desktop.</p>

<h2>Conclusion</h2>

<p>So I just wanted to show my setup and how I've been running things lately. This works really well for course production, because I can RDP in, full screen it on one window and record it as I go through the steps. I can also develop stuff and run/test it out. I've put in a replica of this website in, with the identical configuration for testing/development.</p>

<p>It works great. I'll probably find a better way to do it, or you may know a better way, feel free to leave it in the comments or <a href="https://www.twitter.com/JeremyCMorgan">yell at me on Twitter</a>. If you have any questions, feel free to contact me about it.</p>

<br />


<br />


<p><br />
<div class="subscribefooter">
<h4>Do you like articles like this?</h4>
<div class="rssbutton"></div>
I'm constantly hacking on stuff and writing about happenings in the programmer world. You can <a href="http://feeds.feedburner.com/jeremymorgan/NJwt"><strong>subscribe to my feed</strong></a> here, or you can <a href="http://eepurl.com/b3Y9Wz"><strong>get the hacker newsletter</strong></a> 100% spam free! 
<br /><br />
You can also follow my projects on GitHub:<br />
<iframe src="https://ghbtns.com/github-btn.html?user=JeremyMorgan&type=follow&count=true&size=large" frameborder="0" scrolling="0" width="220px" height="30px"></iframe>
</div>
<br />
<br />
<a href="//pluralsight.pxf.io/c/1221983/431405/7490"><img src="//a.impactradius-go.com/display-ad/7490-431405" border="0" alt="" width="320" height="50"/></a><img height="0" width="0" src="//pluralsight.pxf.io/i/1221983/431405/7490" style="position:absolute;visibility:hidden;" border="0" />
<br />

</p>

<br />



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Load Testing Your IIS Web Server]]></title>
    <link href="https://www.jeremymorgan.com/tutorials/IIS/how-to-load-test-iis-web-server/"/>
    <updated>2017-07-01T02:27:00+00:00</updated>
    <id>https://www.jeremymorgan.com/tutorials/IIS/load-testing-your-iis-web-server</id>
    <content type="html"><![CDATA[<p>All the theory, calculations, and estimations in the world aren't going to tell you how your website will truly perform under a load. If you're deploying a new server, or doing any kind of performance enhancements you don't want to test your results in production. It's always a good idea to see how your system behaves before your visitors do. To do that, you can use a load testing tool, and here are a few I use quite frequently.</p>

<p><strong>Update:</strong> I've featured these tools is my latest IIS course on Pluralsight, <a href="http://pluralsight.pxf.io/c/1221983/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fiis-administration-in-depth" target="_blank">IIS Administration in Depth</a>, check it out!</p>

<!-- more -->


<p></p>

<h3>Netling</h3>

<p><img src="/images/load-testing-iis-web-server/load-test-iis-web-server-01.jpg" alt="Load Testing IIS Web Server" /></p>

<p><strong><a href="https://github.com/hallatore/Netling">Download Netling Here </a></strong></p>

<p>One of the "quick and dirty" applications I use is Netling. This is a super simple tester written in C#. You will need to compile this with Visual Studio, but you don't necessarily have to be a developer to do it. I've been able to load it up, and select build to create it with no modifications with many versions of Visual Studio.</p>

<p>Netling is super simple to operate and about as easy as it gets.</p>

<p>You select how many threads you want to run. This is entirely up to you, more threads will put more load on your machine, and depending on how many cores your CPU has, more may not necessarily be better. Experiment with it and see what works best for you.</p>

<p>It has a feature for "Pipelining". This is when multiple requests go through a single socket without waiting for a response. Setting this higher will generate a higher load but again this something to adjust for best results.  There will be a physical limit to pipelining depending on your hardware and connection speed.</p>

<p>This is a handy tool and is extremely simple to use. One issue I've had with Netling is it sends raw requests that aren't much like a real browser. To emulate real traffic more accurately I have another tool I like to use.</p>

<h3>Netling Pros</h3>

<ul>
<li>Free</li>
<li>Open Source, can be easily modified</li>
<li>Extremely Simple</li>
</ul>


<h3>Netling Cons</h3>

<ul>
<li>Doesn't simulate real transactions well</li>
<li>Can't do authentication or other simulations</li>
<li>Only tests one URL at a time</li>
</ul>


<h3>Web Surge</h3>

<p><img src="/images/load-testing-iis-web-server/load-test-iis-web-server-02.jpg" alt="Load Testing IIS Web Server" /></p>

<p><strong><a href="https://websurge.west-wind.com/">Download Web Surge Here</a></strong></p>

<p>Web surge is by far one of my favorites. It's a great application that simulates a load on your server in a very realistic fashion.</p>

<p>With this program you create sessions, which means you can use more than one URL for the test. Each of the URLs will be run in the session, which can make it more random and realistic. It has a ton of great options as well:</p>

<p><img src="/images/load-testing-iis-web-server/load-test-iis-web-server-03.jpg" alt="Load Testing IIS Web Server" /></p>

<p>It gives you quick results, and you can "drill down" to get more detailed data.</p>

<p><img src="/images/load-testing-iis-web-server/load-test-iis-web-server-04.jpg" alt="Load Testing IIS Web Server" /></p>

<p>You can also export these results in several formats. There's the Websurge proprietary format, as well as XML or JSON. You could parse these results for future analysis work.</p>

<p>Overall Websurge is among my favorites for load testing because it's closer to real world traffic. If you put in a list of all your pages and randomize the test, it can provide some solid information.</p>

<h3>Web Surge Pros</h3>

<ul>
<li>Free (for personal use)</li>
<li>Professional Version reasonably priced</li>
<li>Fast and generates a large load</li>
<li>Simple to use, yet powerful</li>
<li>Simulates "real world" traffic very well</li>
<li>Extremely configurable</li>
</ul>


<h3>Web Surge Cons</h3>

<ul>
<li>None than I can think of</li>
</ul>


<h2>Apache JMeter</h2>

<p><img src="/images/load-testing-iis-web-server/load-test-iis-web-server-05.jpg" alt="Load Testing IIS Web Server" /></p>

<p><strong><a href="https://jmeter.apache.org/">Download JMeter Here </a></strong></p>

<p>The Next application we'll look at is Jmeter. This is an extremely powerful program and can do very thorough testing in addition to generating a load. In fact load testing with Jmeter is just a very small part of it's overall functionality.</p>

<p>With JMeter you have scenarios to run out, because it's more of a testing oriented application you can run through a longer set of steps and processes as a part of your test.</p>

<p>I would encourage you to really dig into this application and learn as much as you can about it to get the full benefits of it.</p>

<h3>Apache JMeter Pros</h3>

<ul>
<li>Free</li>
<li>Very Powerful</li>
<li>Detailed tests can be set up</li>
<li>Minimal setup</li>
</ul>


<h3>Apache JMeter Cons</h3>

<ul>
<li>Steeper learning curve</li>
<li>Can be fairly complicated</li>
<li>May be overkill for what you need</li>
</ul>


<h2>Conclusion</h2>

<p>There are many tools out there for load generation, but these are the ones I use the most. I like to set up various different tests to accurately gauge performance of your website and it's reaction to a load.</p>

<p>In fact, the reaction to a heavy load is the most important thing I'm looking for. When doing performance measurements it's difficult to really nail down all the variables and prove a change has increased performance. But sending a heavy load to your server and seeing how it reacts is pretty conclusive.</p>

<p>I cover some performance and stability enhancements in my <strong><a href="http://pluralsight.pxf.io/c/1221983/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fiis-administration-fundamentals">Pluralsight Course - IIS Administration Fundamentals</a></strong>.</p>

<p>I cover load testing in detail in my new course <strong><a href="http://pluralsight.pxf.io/c/1221983/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fiis-administration-in-depth">IIS Administration In Depth</a></strong>.</p>

<p>Check it out if you want to learn more about administering IIS Servers. If you don't have a Pluralsight account yet, you can <a href="http://pluralsight.pxf.io/c/1221983/424552/7490">start a free trial by clicking here</a>!</p>
]]></content>
  </entry>
  
</feed>
